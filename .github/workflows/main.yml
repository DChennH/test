name: Build

on:
  push:
    branches:
      - master

jobs:
  # build-other-platform:
  #   permissions:
  #     contents: write

  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       os: [macos-latest, ubuntu-latest, windows-latest]

  #   runs-on: ${{ matrix.os }}

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Install Node.js
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: '20.10.0'

  #   - name: Enable corepack
  #     run: corepack enable

  #   - name: Update yarn
  #     run: yarn set version stable

  #   - name: Set nodeLinker
  #     run: yarn config set nodeLinker node-modules

  #   - name: Install dependencies
  #     run: yarn install

  #   # Add conditional step to install Snapcraft only on Ubuntu
  #   - name: Install Snapcraft
  #     if: runner.os == 'Linux'
  #     run: sudo snap install snapcraft --classic

  #   # Build application for other configurations
  #   - name: Build application
  #     run: yarn dist
  #     env:
  #       GH_TOKEN: ${{ secrets.GH_TOKEN }}

  #   # Add this step to upload to GitHub Release
  #   - name: Upload to GitHub Release
  #     uses: softprops/action-gh-release@v1
  #     with:
  #       files: dist/*.@(exe|dmg|snap|deb|rpm|freebsd|tar.gz)
  #       token: ${{ secrets.GITHUB_TOKEN }}
  #       tag_name: v1.0.0
  #       name: 鼎小夏
  #       draft: false
  #       prerelease: false

  build-linux-arm64:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y snapd

    - name: Install LXD via Snap
      run: |
        sudo snap install lxd --channel=4.0/stable

    - name: Initialize LXD
      run: |
        sudo /snap/bin/lxd init --auto

    - name: Set up proxy environment variables
      run: |
        export http_proxy=http://20.206.106.192:80
        export https_proxy=http://104.21.8.246:80

    - name: Create and configure LXD container
      run: |
        sudo /snap/bin/lxc launch ubuntu:20.04 arm64-container -c security.nesting=true
        sudo /snap/bin/lxc exec arm64-container -- /bin/bash -c "
          ping 8.8.8.8 && \
          ping google.com && \
          apt-get update && \
          apt-get install -y snapd curl gnupg lsb-release && \
          systemctl enable snapd && \
          systemctl start snapd && \
          sleep 10 && \
          snap install core && \
          snap install snapcraft --classic && \
          curl -sL https://deb.nodesource.com/setup_20.x | bash - && \
          apt-get install -y nodejs && \
          corepack enable && \
          npm install -g yarn && \
          yarn set version stable && \
          yarn config set nodeLinker node-modules && \
          yarn install && \
          yarn dist && \
          snapcraft --destructive-mode"
      
    - name: Retrieve build artifacts
      run: |
        sudo /snap/bin/lxc file pull arm64-container/workspace/*.snap .

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: '*.snap'
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: v1.0.0
        name: 鼎小夏
        draft: false
        prerelease: false
